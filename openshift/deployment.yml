---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.openshift.tags: bot-betka-fedora
    app: bot-betka-fedora
    template: bot-betka-fedora
  name: bot-betka-fedora
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "bot-betka-fedora:latest"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        },
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "cwt-generator:latest"
          }
        }      
      ]
spec:
  template:
    metadata:
      labels:
        io.openshift.tags: bot-betka-fedora
    spec:
      containers:
        - name: bot-betka-fedora
          # get latest from image stream
          image: " "
          env:
            - name: GITLAB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: betka-fedora-api-keys
                  key: gitlab_api_key
            - name: GITHUB_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: betka-fedora-api-keys
                  key: github_api_key
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: common
                  key: slack_webhook_url
            - name: GITLAB_USER
              valueFrom:
                configMapKeyRef:
                  name: common
                  key: gitlab_user
            - name: PROJECT
              valueFrom:
                configMapKeyRef:
                  name: common
                  key: project
            - name: DEPLOYMENT
              valueFrom:
                configMapKeyRef:
                  name: common
                  key: deployment
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: common
                  key: sentry_dsn
          volumeMounts:
            - name: ssh-volume
              mountPath: /etc/betka/
              readOnly: true
            - name: logs-volume
              mountPath: /var/log/bots
            - name: betka-generator
              mountPath: /tmp/betka-generator
          resources:
            requests:
              memory: "400Mi"
              cpu: "200m"
            limits:
              memory: "800Mi"
              cpu: "400m"
      serviceAccountName: betka
      volumes:
        - name: ssh-volume
          secret:
            secretName: betka-fedora-gitlab-ssh-keys
        - name: logs-volume
          emptyDir: {}
        - name: betka-generator
          persistentVolumeClaim:
            claimName: claim.betka
      restartPolicy: Always
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingParams:
      intervalSeconds: 1
